# .github/workflows/ci-cd.yml
name: CI/CD - Temperinho Frontend

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint-and-test:
    name: Lint e Testes
    runs-on: ubuntu-latest
    steps:
      - name: 1. Checkout do código
        uses: actions/checkout@v4

      - name: 2. Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm' # Ativa o cache para dependências do npm

      - name: 3. Instalar dependências
        run: npm ci

      - name: 4. Executar Linter
        run: npm run lint

      # Se você tiver testes, adicione o comando aqui
      # - name: 5. Executar Testes
      #   run: npm test

  build-and-push-docker:
    name: Build e Push da Imagem Docker
    runs-on: ubuntu-latest
    # Este job só executa se o job 'lint-and-test' for bem-sucedido
    # e apenas para pushes na branch 'main'
    needs: lint-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: 1. Checkout do código
        uses: actions/checkout@v4

      - name: 2. Configurar QEMU (para multi-plataforma, opcional)
        uses: docker/setup-qemu-action@v3

      - name: 3. Configurar Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 4. Login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 5. Build e Push da Imagem
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/temperinho-front:latest
          # Adiciona cache para as camadas do Docker para acelerar builds futuras
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/temperinho-front:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/temperinho-front:buildcache,mode=max
